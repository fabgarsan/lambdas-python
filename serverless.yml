service: lambdas-python
useDotenv: true

frameworkVersion: '2'

provider:
  name: aws
  runtime: python3.8
  lambdaHashingVersion: 20201221
  deploymentBucket:
    name: lambda-services-python-dramor
  environment:
    DB_USER: ${env:DB_USER}
    DB_HOST: ${env:DB_HOST}
    DB_DATABASE: ${env:DB_DATABASE}
    DB_PASSWORD: ${env:DB_PASSWORD}
    DB_PORT: ${env:DB_PORT}

package:
  individually: true
  excludeDevDependencies: true
  patterns:
    - '!node_modules/**'
    - '!env/**'
    - '!.pytest_cache'
    - '!**package**'
    - '!.coverage'
    - '!.gitignore'
    - '!.coveragerc'
    - '!coverage_html_report/**'
    - '!tests.py'

functions:
  createMutant:
    handler: handlers/create_mutant.handler
    layers:
      - { Ref: PythonRequirementsLambdaLayer }
    timeout: 60
    memorySize: 128
    events:
      - http:
          path: mutant
          method: post
          cors: true

  getStats:
    handler: handlers/get_stats.handler
    layers:
      - { Ref: PythonRequirementsLambdaLayer }
    timeout: 60
    memorySize: 128
    events:
      - http:
          path: stats
          method: get
          cors: true

plugins:
  - serverless-offline
  - serverless-python-requirements

custom:
  pythonRequirements:
    dockerizePip: non-linux
    layer:
      name: ${self:provider.stage}-layerPython
      description: Lambda Python requirements lambda layer
      compatibleRuntimes:
        - python3.8
      licenseInfo: GPLv3
